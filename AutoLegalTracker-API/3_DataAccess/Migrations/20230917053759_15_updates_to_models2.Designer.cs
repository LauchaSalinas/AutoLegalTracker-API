// <auto-generated />
using System;
using AutoLegalTracker_API.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoLegalTracker_API._3_DataAccess.Migrations
{
    [DbContext(typeof(ALTContext))]
    [Migration("20230917053759_15_updates_to_models2")]
    partial class _15_updates_to_models2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AutoLegalTracker_API.Models.EmailLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("EmailDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmailTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("UserTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmailTemplateId");

                    b.ToTable("EmailLogs");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("emailCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalAutomation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CaseCaptionContains")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseCaptionDoesNotContain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ExpenseAdvancesPaid")
                        .HasColumnType("bit");

                    b.Property<string>("JurisdictionContains")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JurisdictionDoesNotContain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationBodyContains")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationBodyDoesNotContain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationFromContains")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationFromDoesNotContain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationToContains")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationToDoesNotContain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RunsAutomatically")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("LegalAutomations");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExpenseAdvances")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("ExpenseAdvancesPaid")
                        .HasColumnType("bit");

                    b.Property<string>("Jurisdiction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LegalCaseHonorarium")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PossibleCourtDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("LegalCases");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalCaseAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("AssignMedicalAppointment")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmailTemplateId")
                        .HasColumnType("int");

                    b.Property<int?>("LegalCaseConditionId")
                        .HasColumnType("int");

                    b.Property<int?>("LegalResponseTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotificationConditionId")
                        .HasColumnType("int");

                    b.Property<int?>("NotificationCondtionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmailTemplateId");

                    b.HasIndex("LegalCaseConditionId");

                    b.HasIndex("LegalResponseTemplateId");

                    b.HasIndex("NotificationConditionId");

                    b.ToTable("LegalCaseActions");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalCaseAction_LegalCaseAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Add")
                        .HasColumnType("bit");

                    b.Property<int>("LegalCaseActionId")
                        .HasColumnType("int");

                    b.Property<int>("LegalCaseAttributeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LegalCaseActionId");

                    b.HasIndex("LegalCaseAttributeId");

                    b.ToTable("LegalCaseAction_LegalCaseAttribute");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalCaseAction_UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("LegalCaseActionId")
                        .HasColumnType("int");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LegalCaseActionId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("LegalCaseAction_UserType");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalCaseAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LegalCaseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LegalCaseId");

                    b.ToTable("LegalCaseAttributes");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalCaseAttribute_LegalCaseCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("LegalCaseAttributeId")
                        .HasColumnType("int");

                    b.Property<int>("LegalCaseConditionId")
                        .HasColumnType("int");

                    b.Property<bool>("MustBePresent")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("LegalCaseAttributeId");

                    b.HasIndex("LegalCaseConditionId");

                    b.ToTable("LegalCaseAttribute_LegalCaseCondition");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalCaseCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("AnalysesMustBeReceived")
                        .HasColumnType("bit");

                    b.Property<string>("CaseCaptionContains")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseCaptionDoesNotContain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ExpensesShouldBePaid")
                        .HasColumnType("bit");

                    b.Property<string>("JurisdictionContains")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JurisdictionDoesNotContain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RequestedCourtOrdersMustBeReceived")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LegalCaseConditions");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LegalAutomationId")
                        .HasColumnType("int");

                    b.Property<int>("LegalCaseId")
                        .HasColumnType("int");

                    b.Property<int?>("MedicalAppointmentId")
                        .HasColumnType("int");

                    b.Property<bool>("Read")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LegalAutomationId");

                    b.HasIndex("LegalCaseId");

                    b.ToTable("LegalNotifications");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalResponseTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LegalResponseTemplate");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.MedicalAppointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LegalNotificationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PatientAttended")
                        .HasColumnType("bit");

                    b.Property<bool?>("PatientAttendedOnline")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LegalNotificationId")
                        .IsUnique();

                    b.ToTable("MedicalAppointments");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.NotificationCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BodyContains")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyDoesNotContain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromContains")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromDoesNotContain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleContains")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleDoesNotContain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToContains")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToDoesNotContain")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NotificationConditions");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.RequestedAnalysis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFulfilled")
                        .HasColumnType("bit");

                    b.Property<int>("LegalCaseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LegalCaseId");

                    b.ToTable("RequestedAnalyses");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.RequestedCourtOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFulfilled")
                        .HasColumnType("bit");

                    b.Property<int>("LegalCaseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LegalCaseId");

                    b.ToTable("RequestedCourtOrders");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleOAuth2AccessToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleOAuth2IdToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleOAuth2RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GoogleOAuth2TokenCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GoogleOAuth2TokenExpiration")
                        .HasColumnType("bigint");

                    b.Property<string>("GoogleProfilePicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.Property<string>("WebCredentialPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebCredentialUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserType");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.WeatherForecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemperatureC")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WeatherForecasts");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.EmailLog", b =>
                {
                    b.HasOne("AutoLegalTracker_API.Models.EmailTemplate", "Email")
                        .WithMany("EmailLogs")
                        .HasForeignKey("EmailTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Email");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalAutomation", b =>
                {
                    b.HasOne("AutoLegalTracker_API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalCase", b =>
                {
                    b.HasOne("AutoLegalTracker_API.Models.User", "User")
                        .WithMany("LegalCases")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalCaseAction", b =>
                {
                    b.HasOne("AutoLegalTracker_API.Models.EmailTemplate", "EmailTemplate")
                        .WithMany()
                        .HasForeignKey("EmailTemplateId");

                    b.HasOne("AutoLegalTracker_API.Models.LegalCaseCondition", "LegalCaseCondition")
                        .WithMany()
                        .HasForeignKey("LegalCaseConditionId");

                    b.HasOne("AutoLegalTracker_API.Models.LegalResponseTemplate", "LegalResponseTemplate")
                        .WithMany()
                        .HasForeignKey("LegalResponseTemplateId");

                    b.HasOne("AutoLegalTracker_API.Models.NotificationCondition", "NotificationCondition")
                        .WithMany()
                        .HasForeignKey("NotificationConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailTemplate");

                    b.Navigation("LegalCaseCondition");

                    b.Navigation("LegalResponseTemplate");

                    b.Navigation("NotificationCondition");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalCaseAction_LegalCaseAttribute", b =>
                {
                    b.HasOne("AutoLegalTracker_API.Models.LegalCaseAction", "LegalCaseAction")
                        .WithMany("LegalCaseAttributesToAddOrDelete")
                        .HasForeignKey("LegalCaseActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoLegalTracker_API.Models.LegalCaseAttribute", "LegalCaseAttribute")
                        .WithMany()
                        .HasForeignKey("LegalCaseAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LegalCaseAction");

                    b.Navigation("LegalCaseAttribute");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalCaseAction_UserType", b =>
                {
                    b.HasOne("AutoLegalTracker_API.Models.LegalCaseAction", "LegalCaseAction")
                        .WithMany("UserTypeAllowedToUseAction")
                        .HasForeignKey("LegalCaseActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoLegalTracker_API.Models.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LegalCaseAction");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalCaseAttribute", b =>
                {
                    b.HasOne("AutoLegalTracker_API.Models.LegalCase", "LegalCase")
                        .WithMany("LegalCaseAttributes")
                        .HasForeignKey("LegalCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LegalCase");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalCaseAttribute_LegalCaseCondition", b =>
                {
                    b.HasOne("AutoLegalTracker_API.Models.LegalCaseAttribute", "LegalCaseAttribute")
                        .WithMany()
                        .HasForeignKey("LegalCaseAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoLegalTracker_API.Models.LegalCaseCondition", "LegalCaseCondition")
                        .WithMany("AttributeConditionRelationships")
                        .HasForeignKey("LegalCaseConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LegalCaseAttribute");

                    b.Navigation("LegalCaseCondition");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalNotification", b =>
                {
                    b.HasOne("AutoLegalTracker_API.Models.LegalAutomation", null)
                        .WithMany("LegalNotifications")
                        .HasForeignKey("LegalAutomationId");

                    b.HasOne("AutoLegalTracker_API.Models.LegalCase", "LegalCase")
                        .WithMany("LegalNotifications")
                        .HasForeignKey("LegalCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LegalCase");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.MedicalAppointment", b =>
                {
                    b.HasOne("AutoLegalTracker_API.Models.LegalNotification", "LegalNotification")
                        .WithOne("MedicalAppointment")
                        .HasForeignKey("AutoLegalTracker_API.Models.MedicalAppointment", "LegalNotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LegalNotification");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.RequestedAnalysis", b =>
                {
                    b.HasOne("AutoLegalTracker_API.Models.LegalCase", "LegalCase")
                        .WithMany("RequestedAnalyses")
                        .HasForeignKey("LegalCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LegalCase");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.RequestedCourtOrder", b =>
                {
                    b.HasOne("AutoLegalTracker_API.Models.LegalCase", "LegalCase")
                        .WithMany("RequestedCourtOrders")
                        .HasForeignKey("LegalCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LegalCase");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.User", b =>
                {
                    b.HasOne("AutoLegalTracker_API.Models.UserType", "userType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("userType");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.EmailTemplate", b =>
                {
                    b.Navigation("EmailLogs");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalAutomation", b =>
                {
                    b.Navigation("LegalNotifications");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalCase", b =>
                {
                    b.Navigation("LegalCaseAttributes");

                    b.Navigation("LegalNotifications");

                    b.Navigation("RequestedAnalyses");

                    b.Navigation("RequestedCourtOrders");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalCaseAction", b =>
                {
                    b.Navigation("LegalCaseAttributesToAddOrDelete");

                    b.Navigation("UserTypeAllowedToUseAction");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalCaseCondition", b =>
                {
                    b.Navigation("AttributeConditionRelationships");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.LegalNotification", b =>
                {
                    b.Navigation("MedicalAppointment")
                        .IsRequired();
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.User", b =>
                {
                    b.Navigation("LegalCases");
                });

            modelBuilder.Entity("AutoLegalTracker_API.Models.UserType", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
